hydra:
  run:
    dir: plots/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: "${hydra.help.app_name} is powered by Hydra.

      "
    footer: "Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      "
    template: "${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      "
  hydra_help:
    template: "Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use '--cfg hydra' to Show the Hydra config.

      "
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: "[%(asctime)s][HYDRA] %(message)s"
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
        - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: "[%(asctime)s][%(name)s][%(levelname)s] - %(message)s"
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
        - console
        - file
    disable_existing_loggers: false
  env: {}
  mode: null
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task: []
  job:
    name: train
    chdir: null
    override_dirname: ""
    id: ???
    num: ???
    config_name: main
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: "="
        item_sep: ","
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: "1.3"
    cwd: E:\tmp\PycharmProjects\AerialDetection
    config_sources:
      - path: hydra.conf
        schema: pkg
        provider: hydra
      - path: E:\tmp\PycharmProjects\AerialDetection\configs
        schema: file
        provider: main
      - path: ""
        schema: structured
        provider: schema
    output_dir: ???
    choices:
      inference: default
      training: default
      data: default
      model: default
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
model:
  model:
    config_path: yolo12n.yaml
    save_onnx: true
    save_tensorrt: true
data:
  data:
    data_yaml: configs/data/data.yaml
    img_size: 640
    batch_size: 24
    num_workers: 8
training:
  trainer:
    max_epochs: 40
    accelerator: auto
    devices: auto
    precision: 16-mixed
  train_hyp:
    lr: 0.01
  logger:
    save_dir: ${hydra:run.dir}
    name: ${hydra:job.name}
  callback_checkpoint:
    monitor: val_loss
    mode: min
    save_top_k: 1
    filename: best
  callback_stopping:
    monitor: val_loss
    patience: 5
    mode: min
inference:
  inference:
    model_path: plots/2025-06-07/14-09-33/weights/best.pt
    data_path: configs/data/data.yaml
